コーヒーの待ち時間を退屈にさせないコースターの機能整理と実装フロー
🛠 機能一覧（コースターが提供する体験）
ドリップの可視化

重力センサでカップの重量変化を計測し、コーヒーがどれくらい注がれたかをリアルタイムに表示。
重量変化に応じたアニメーションをスクリーン上に表示（例: カップが満たされる、キャラクターが反応する など）。
ジェスチャー操作（手掌認識）

Webカメラで手のひらを認識し、指の本数で操作を行う。
可能な操作例：
1本指 → 音楽の再生/停止
2本指 → 動画再生（研究室のプレゼン動画など）
3本指 → ミニゲーム起動
ミニゲーム要素（遊びの追加）

ドリップ量に応じてポイントが貯まり、ミニゲームがプレイ可能になる。
例:
「適量を注ごう」→ 目標のmlを目指してカップを置いたまま待つとスコア加算。
「コーヒードリップの精度チャレンジ」→ 指定量ピッタリで止めると特典あり。
「豆の種類診断」→ コーヒーを注ぐスピード・量から好みを判定し、おすすめを表示。
カスタムUIと音楽再生

過去のプレゼン動画をリストから選択可能。
好きなBGMを流すことができる（手のひら操作で曲変更）。
📝 実装フロー
1. ハードウェア準備
重力センサ（ロードセル + HX711）を用意し、Raspberry Pi でデータ取得。
Webカメラを用意し、手掌認識を実装。
2. センサデータ取得 & 変換
重量データを リアルタイムで取得。
変化を処理して「注がれた量」と「速度」を算出。
しきい値を設定し、閾値を超えた際のイベントをトリガー。
3. Webカメラ & 手掌認識
MediaPipe Handsを使用し、手のひらを検出。
指の本数をカウントし、操作イベントをトリガー。
UI側へフィードバックを送る。
4. UI & 可視化
Webアプリ or Unityで アニメーションUI を作成。
カップが満たされるアニメーション。
重量に応じたインジケータ表示。
映像・音楽の操作画面を作成（シンプルなボタンUI + ジェスチャー対応）。
5. ミニゲームの実装
「適量を注ごう」 → 計測値を一定時間ごとに取得し、スコア化。
「ピッタリチャレンジ」 → 目標量との差を評価し、クリア判定。
「豆の種類診断」 → ドリップの特性からおすすめ表示。
6. 全体統合 & 調整
データ通信の最適化（Raspberry Pi → PC or Webアプリ）
遅延対策（特にカメラ処理 & UI更新）
ジェスチャー認識の精度調整
改善提案：

エンターテインメント性の強化

ミニゲーム要素の追加（例：コーヒーが抽出される量に応じてキャラクターが成長）
複数人でインタラクティブに楽しめる要素
コーヒーの抽出パターンを音楽やアニメーションと連動


ユーザーエクスペリエンスの向上

LED等でのビジュアルフィードバック追加
サウンドフィードバックの実装
直感的なジェスチャー操作の改善


技術的な発展性

複数のコースター間での通信機能
カスタマイズ可能なインタラクション
データの可視化と分析機能